Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum.


Example 1:

Input:
N = 5
Arr[] = {1,2,3,-2,5}
Output:
9
Explanation:
Max subarray sum is 9
of elements (1, 2, 3, -2, 5) which 
is a contiguous subarray.

Example 2:

Input:
N = 4
Arr[] = {-1,-2,-3,-4}
Output:
-1
Explanation:
Max subarray sum is -1 
of element (-1)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


long long maxSubarraySum(int arr[], int n){
        
        // Your code here
        int maxi=0,cur=0,s=0,f=INT_MIN;
        for(int i=0;i<n;i++){
            cur+=arr[i];
            if(cur>=0)maxi=max(maxi,cur);
            else cur=0;
            s=s+arr[i];
            f=max(f,arr[i]);
        }
        if(maxi==0 && s<0)return f;
        return maxi;
        
    }
